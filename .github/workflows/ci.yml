name: ci

on:
  push:
    branches: ["main"]
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
  pull_request:
env:
  GITHUB_OWNER: gainsway

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Configure Nuget sources
        run: dotnet nuget add source --username $GITHUB_OWNER --password ${{ secrets.NUGET_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/$GITHUB_OWNER/index.json"
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal

  publish:
    if: startsWith(github.ref, 'refs/pull') || startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: ci
    outputs:
      version: ${{ steps.gitversion.outputs.SemVer }}
      commitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1.2.0
        with:
          versionSpec: "5.x"
          includePrerelease: true
      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v1.2.0
        id: gitversion # step id used as reference for output values

      - name: Display GitVersion outputs
        run: |
          echo "Version: ${{ steps.gitversion.outputs.SemVer }}"
          echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"

      - name: Configure Nuget sources
        run: dotnet nuget add source --username $GITHUB_OWNER --password ${{ secrets.NUGET_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/$GITHUB_OWNER/index.json"

      - name: Package
        run: dotnet pack -p:Version='${{ steps.gitversion.outputs.fullSemVer }}' -c Release --output Publish

      - name: Push package to GitHub packages
        run: dotnet nuget push "Publish/*.nupkg" --api-key ${{ secrets.NUGET_TOKEN }} --source "github" --skip-duplicate
